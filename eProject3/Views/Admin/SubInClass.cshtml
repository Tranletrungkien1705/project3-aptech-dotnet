@model IPagedList<eProject3.Models.SubInClass>;
@using X.PagedList.Mvc.Core;
@using X.PagedList;
@using eProject3.Repository;
@inject IStaffRepository staffRepository;
@inject IManagerRepository managerRepository;
@inject IClassRepository classRepository;
@inject ISubjectRepository subjectRepository;
@{
    ViewData["Title"] = "Current Competitions";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
<body>
    <div class="row">
        <div class="col-sm-12">
            <div class="home-tab">
                <div class="d-sm-flex align-items-center justify-content-between border-bottom">
                </div>
                <div class="tab-content tab-content-basic">
                    <div class="tab-pane fade show active" id="overview" role="tabpanel" aria-labelledby="overview">


                        <div class="row">
                            <div class="col-12 grid-margin stretch-card">
                                <div class="card card-rounded">
                                    <div class="card-body">
                                        <div class="d-sm-flex justify-content-between align-items-start">
                                            <div>
                                                <h4 class="card-title card-title-dash">Classes Information</h4>
                                            </div>
                                            <div>
                                                @*<button id="openModalBtn" class="btn btn-primary btn-lg text-white mb-0 me-0" type="button"><i class="mdi mdi-account-plus"></i>Add New Students</button>*@
                                                <a href="AddOrUpdateStaff"><button class="btn btn-primary btn-lg text-white mb-0 me-0" id="addButton" <i class="mdi mdi-account-plus"></i>Add New Staffs</button></a>
                                            </div>
                                        </div>
                                    <div class="table-responsive">
                                        <table class="table table-dark table-borderless mb-0">
                                            <thead>
                                                <tr>
                                                    <th scope="col">ID</th>
                                                    <th scope="col">Staff Name</th>
                                                    <th scope="col">Class Name</th>
                                                    <th scope="col">Manager Name</th>
                                                    <th scope="col">Subject Name</th>
                                                    <th scope="col">Number Of Sessions</th>
                                                    <th scope="col">Start Date</th>
                                                    <th scope="col">End Date</th>
                                                    <th>Edit</th>
                                                    <th>Delete</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @if(Model != null)
                                                {
                                                    @foreach (var x in Model)
                                                    {
                                                        <tr>
                                                            <th>@x.Id</th>
                                                            <th>@staffRepository.GetByIdAsync((int)x?.StaffId).GetAwaiter().GetResult()?.Name</th>
                                                            <td>@classRepository.GetByIdAsync((int)x?.ClassId).GetAwaiter().GetResult()?.Name</td>
                                                            <td>@managerRepository.GetByIdAsync((int)x?.ManagerId).GetAwaiter().GetResult()?.Name</td>
                                                            <td>@subjectRepository.GetByIdAsync((int)x?.SubjectId).GetAwaiter().GetResult()?.Name</td>
                                                            <td>@x.NumberOfSession</td>
                                                            <td>@x.StartDate</td>
                                                            <td>@x.EndDate</td>
                                                            <td>
                                                                <a href="/Admin/AddOrUpdateSubInClass/@x.Id"><button class="btn btn-success" value="@x.Id">Edit</button></a>

                                                            </td>
                                                            <td>
                                                                <a href="javascript:void(0);" onclick="deleteStudent(@x.Id)"><button class="btn btn-success" value="">Delete</button></a>
                                                            </td>
                                                        </tr>
                                                    }
                                                }
                                                                
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- </div> -->
                        <!-- </div> -->
                    </div>
                </div>
            </div>
        </div>
    </div>
        @Html.PagedListPager(Model, page=>Url.Action("SubInClass",new{page}))
        <script>
            function deleteStudent(id) {
                if (confirm('Are you sure you want to delete this one?')) {
                    $.ajax({
                        url: '/Admin/DeleteSubInClassAsync/' + id,
                        type: 'GET',
                        success: function (result) {
                            // Xử lý kết quả thành công
                            alert('Completely deleted successfully');
                            // Thực hiện các hành động khác sau khi xóa thành công
                            window.location.href = '/Staff/SubInClass';
                        },
                        error: function (xhr, status, error) {
                            // Xử lý lỗi
                            alert('Error deleting this one');
                        }
                    });
                }
            }
        </script>
</body>

</html>